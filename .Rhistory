setwd("~/git/mfind")
perform<-read.csv(file='test.txt', header=FALSE, sep='/t')
perform<-read.csv(file='test.txt', header=FALSE, sep='\t')
perform
perform(2,1,2)
substr(perform,1,2)
substr(perform[,2],1,2)
substr(perform[,2],1,1)
as.integer(substr(perform[,2],1,1))
as.double(substr(perform[,2],3,])
as.double(substr(perform[,2],3,)
)
as.double(substr(perform[,2],3,7)
)
as.double(substr(perform[,2],3,7))
as.numeric(substr(perform[,2],3,7))
34.3
sum(as.numeric(substr(perform[,2],3,7)))
allValues<-as.numeric(substr(perform[,2],3,7))
?seq
length(allValues)
allValues(seq(1,270,3))
allValues[seq(1,270,3)]
real<-allValues[seq(1,270,3)]
user<-allValues[seq(2,270,3)]
sys<-allValues[seq(3,270,3)]
for(i in 1:10){}
for(i in 1:10){
rep(i,10)
}
rep(1,10)
c<-c(c,1:10)
c
rm(c)
c(rep(1,10),(2,10),(3,10),(4,10),(5,10),(6,10),(7,10),(8,10),(9,10),(10,10))
c(rep(1,10),rep(2,10),rep(3,10),rep(4,10),rep(5,10),rep(6,10),rep(7,10),rep(8,10),rep(9,10),rep(10,10))
threads<-c(rep(1,10),rep(2,10),rep(3,10),rep(4,10),rep(5,10),rep(6,10),rep(7,10),rep(8,10),rep(9,10),rep(10,10))
plot(real,threads)
thread<-threads[11:100]
threads<-threads[11:100]
rm(thread)
plot(real,threads)
plot(threads,real)
point(threads,sys)
points(threads,sys)
plot(threads,sys)
plot(threads,user)
par(mfcol=c(1,3))
plot(threads,real)
plot(threads,real)
plot(threads,real)
par(mfcol=c(3,1))
plot(threads,real)
plot(threads,user)
plot(threads,sys)
par(mfcol=c(3,1))
plot(threads,real, ylab="'real time' seconds", xlab="number of threads")
plot(threads,user, ylab="'user time' seconds", xlab="number of threads")
plot(threads,sys, ylab="'system time' seconds", xlab="number of threads")
par(mfcol=c(3,1))
plot(threads,real, ylab="'real time' seconds", xlab="number of threads", cex=2)
plot(threads,real, ylab="'real time' seconds", xlab="number of threads", cex.axis=2)
plot(threads,real, ylab="'real time' seconds", xlab="number of threads", cex.labels=2)
par(mfcol=c(3,1))
plot(threads,real, ylab="'real time' seconds", xlab="number of threads", cex.lab=2)
plot(threads,real, ylab="'real time' seconds", xlab="number of threads", cex.lab=1.5)
plot(threads,real, ylab="'real time' seconds", xlab="number of threads", cex.lab=1.3)
par(mfcol=c(3,1))
plot(threads,real, ylab="'real time' seconds", xlab="number of threads", cex.lab=1.2)
plot(threads,real, ylab="'real time' seconds", xlab="number of threads", cex.lab=1.2)
plot(threads,real, ylab="'real time' seconds", xlab="number of threads", cex.lab=1.2)
exit
quit()
